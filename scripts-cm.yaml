apiVersion: v1
kind: ConfigMap
metadata:
  name: scripts-cm
data:
  locustfile.py: |
    import random
    import string
    import time
    import logging
    from locust import HttpUser, task, events


    @events.quitting.add_listener
    def _(environment, **kw):
        if environment.stats.total.fail_ratio > 0.01:
            logging.error("Test failed due to failure ratio > 1%")
            environment.process_exit_code = 1
        elif environment.stats.total.avg_response_time > 200:
            logging.error("Test failed due to average response time ratio > 200 ms")
            environment.process_exit_code = 1
        elif environment.stats.total.get_response_time_percentile(0.95) > 800:
            logging.error("Test failed due to 95th percentile response time > 800 ms")
            environment.process_exit_code = 1
        else:
            environment.process_exit_code = 0


    class MyUser(HttpUser):
        # wait_time = between(1, 3)

        def on_start(self):
            # This will be executed when a virtual user (Locust user) starts running.
            # Perform the login process here.
            self.client.cookies.set('L', 'hindi%2Cenglish%2Cpunjabi')
            self.client.cookies.set('geo', '0.0.0.0%2CIN%2CMaharashtra%2CNavi+Mumbai%2C400703')

        @task
        def check_emergency_services_001(self):
            response = self.client.get(
                '/api.php?__call=app.getLaunchData&app_version=9.7.2&ctx=android&api_version=4')
            assert response.status_code == 200

        @task
        def check_emergency_services_002(self):
            playlists_ids = ['101466317', '101704478', '1025644952', '1026391929', '103330400', '1054566535', '106001213', '1061608757', '1063706306', '1064016932', '1064017310', '1065394191', '1065516512', '1065675933', '1074599618', '107605145', '107740743', '1079336813', '1080335349', '1081812124', '1094639459', '1097866391', '110048908', '111073714', '111073796', '1132082241', '113221319', '1137868670', '1139764114', '1139872305', '1139885431', '1142129930', '1142130315', '1144021787', '11474859', '1149549320', '1153815239', '1158420036', '1158706461', '1160947264', '1168008913', '1172298985', '1179495885', '1179504143', '1179506683', '1179609449', '1180791963', '1180792420', '1180795852', '1180796337', '1180920897', '1181051388', '1181057765', '1181164589', '1181193583', '1184540989', '1184970929', '11922945', '1209467513', '1209467583', '1209467662', '1209613283', '1209975205', '1210691116', '1211041311', '1212537058', '146434735', '146459740', '149130598', '150482025', '151695765', '154589446', '156440861', '157145953', '158049570', '158221880', '158223831', '158224178', '158224296', '158224335', '158224469', '158224592', '158224953', '158225088', '158225158', '158225349', '158225480', '158225563', '158225866', '158226020', '158226237', '158226247', '158226589', '158226645', '158226697', '159470021', '159470116', '1679071', '169673226', '174803438', '208466266', '238238498', '2573977', '2574962', '2574965', '2676373', '2676586', '2676953', '2677097', '291162557', '320001004', '325040007', '3344648', '3842620', '3850607', '3850665', '436815276', '448234737', '4637712', '4720488', '4876538', '49', '571929833', '577505197', '61470767', '618326972', '618777210', '623521656', '626966592', '66034298', '661349819', '671894983', '67534892', '67691546', '688865299', '68922143', '696005328', '729750867', '7386899', '76182059', '765363046', '773195337', '78041603', '788700866', '79316075', '794344429', '79486626', '79487138', '79487390', '79490229', '79490276', '79491317', '797276286', '799158503', '80202238', '802336660', '80699522', '81852466', '81952675', '81983404', '81998266', '82241378', '825219293', '82543613', '826403055', '82914609', '829906546', '832225472', '832226225', '832227909', '83409225', '83443504', '83625701', '837803163', '84665911', '856364905', '85684453', '858866279', '85933957', '85935274', '86382067', '86591139', '86782548', '87109788', '87336382', '87811002', '88082089', '902306817', '902923516', '904463323', '904464558', '913487155', '91615075', '920428288', '935734052', '941119415', '943065870', '945435329', '945460735', '9458021', '945969391', '946945296', '947096812', '951897805', '952823398', '976143654', '9883340', '999067574']
            for p in playlists_ids:
                path = f'/api.php?ctx=android&api_version=4&__call=playlist.getDetails&app_version=9.7.2&listid={p}'
                response = self.client.get(path, name="/api.php?ctx=android&api_version=4&__call=playlist.getDetails&app_version=9.7.2&listid=[p]")
                assert response.status_code == 200



        @task
        def check_emergency_services_003(self):
            album_ids = ['31484134', '33634886', '36989518', '41916361', '43198731', '44089012', '47843746', '49495719', '50135024', '50257332', '50300585', '50519242', '50522143', '50544716', '50592774', '50733348', '50826285', '50834638', '50942779', '51034911', '51044671', '51059983', '51075789', '51075807', '51111011', '51126179', '51128039', '51130175', '51150914', '51153059', '51179665', '51191971', '51297594', '51312778', '51317159', '51335733', '51340715', '51347523', '51386782', '51389057', '51391520', '51392163', '51393256', '51401167', '51402929', '51403489', '51407574', '51419924', '51420092', '51477115', '51488057', '51508525', '51517017', '51517018', '51518430', '51524662', '51534888', '51535433', '51536601', '51540292', '51540293', '51565877', '51567601', '51569937', '51571859', '51587671', '51594406', '51594802', '51595631', '51595844', '51611919', '51614896', '51619497', '51648650', '51653808', '51655854', '51659411', '51660026', '51661996', '51667007', '51672513', '51679475', '51681099', '51688046', '51695753', '51703707', '51703709', '51706280', '51708293', '51709031', '51712827', '51715156', '51715310', '51717236', '51719631', '51732817', '51733686', '51734862', '51740478', '51740506', '51740507', '51742030', '51744107', '51759174', '51762245', '51762272', '51762568', '51765542', '51768576', '51773044', '51831371', '51831727', '51838800', '51838854', '51838890', '51846797', '51848704', '51851794', '51851977', '51852153', '51860798', '51864941', '51868587', '51869432', '51874949', '51876983', '51881702', '51885832', '51886777', '51887863', '51889270', '51889914', '51890030', '51895985', '51897476', '51899233', '51907430', '51909168', '51910072', '51911481', '51911722', '51917740', '51934949', '51934966', '51935005', '51935017', '51935191', '51935901', '51936533', '51936717', '51939702', '51939830', '51941630', '51941631', '51946379', '51947712', '51957514', '51960200', '51960870', '51963292', '51965891', '51965895', '51967636', '52004497', '52013579', '52013692', '52016086', '52016346', '52016926', '52024407', '52026029', '52026354', '52029936', '52031476', '52033191', '52034466', '52035999', '52036851', '52054290', '52054654', '52059516', '52061552', '52061966', '52062059', '52062184', '52066141', '52070009', '52075483', '52082989', '52084149', '52085219', '52086705', '52086910', '52087532', '52088179', '52088716', '52088718', '52090756', '52092668', '52096860', '52107989', '52107990', '52107991', '52108454', '52108609', '52109257', '52110968', '52113138', '52113693', '52114420', '52126521', '52128943', '52136465', '52136498', '52145707', '52164582', '52164583', '52168422', '52184351', '52190396', '52210422']
            for a in album_ids:
                path = f'/api.php?ctx=android&api_version=4&app_version=9.7.2&__call=content.getAlbumDetails&albumid={a}'
                response = self.client.get(path, name= "'/api.php?ctx=android&api_version=4&app_version=9.7.2&__call=content.getAlbumDetails&albumid={a}")
                assert response.status_code == 200


        @task
        def check_emergency_service_004(self):
            song_ids = ['0SbJBZ-j', '1dr2ZrwX', '2U8y-1PN', '3-lP2H2F', '3BzR_Unz', '3ve1WR2j', '4Bz-OvkD', '4D94DpYZ', '4Ek57WMS', '4tYsTt3g', '5HrGG6Qb', '5_Uk8PI3', '5nlE-OmG', '6LUeUJOm', '6URR_GfK', '6ci_8xwH', '6g1VXIRu', '7Df31grn', '7mI_16AM', '84G8aGio', '8V3lL867', '8ggtFHiu', '9YJ9fpjc', '9v-zJeqK', 'ADg907JU', 'AwuN7PPo', 'CVG6G3VU', 'Cu6Bo6fy', 'DeVpA9Df', 'E4PzytVq', 'E9FNLTmK', 'EAd3m_hg', 'EIpO9VvY', 'GAcDtk3m', 'GwDUFvAZ', 'HOqb5XO7', 'IZ9aW7ZD', 'IkAz7WUX', 'Ip5AviKJ', 'J13nV4fQ', 'J7ZB6S-1', 'J9UaA0Hk', 'JduLJdmh', 'KICEUwt4', 'KiDmwkXR', 'L25ZkhAm', 'MDE5loUj', 'Me6mI48U', 'MeMpP5b9', 'NRMFELPy', 'O8K8XYG3', 'OX3zX05j', 'T-V4CaMS', 'TGb-cuJn', 'TkKU1fgU', 'Tkz1p4ij', 'UTd9C9qq', 'V6FgYvTj', 'VQLQI23L', 'Vz9--1-z', 'XbAjwf_6', 'Yzj1BASc', '_E_FvX08', 'aOA61SPU', 'aSBVBERY', 'aSoxWhqc', 'amEQvhX0', 'cD_e__A6', 'cTMo8uzu', 'eDfxPtuK', 'gewH2BtC', 'ib46eMvx', 'jsdFDxcD', 'm0QHcot7', 'mOMC6PEf', 'muf8OSqr', 'nM-zWfwq', 'nR9dw2qI', 'nf7kvoQr', 'pBxuhUFm', 'rG0yHOe1', 'rbUBuC_N', 'sMiGArK8', 'twWWX67T', 'vTCxPMMR', 'wPtUJmIY', 'wmudWtHU', 'ws8diY9p', 'x4f6kAig', 'xGxc_ZKR', 'yHAUb4CU', 'yNl3sUnP', 'yauwiisj', 'yn23CYg0', 'z54hRsUT', 'zOg1KePM', 'zYfni7vq', 'zfHmBHQg', 'zklf1w_I']
            for s in song_ids:
                path = f'/api.php?&__call=song.getDetails&app_version=9.7.2&ctx=android&api_version=4&pids={s}'
                response = self.client.get(path, name= "/api.php?&__call=song.getDetails&app_version=9.7.2&ctx=android&api_version=4&pids={s}")
                assert response.status_code == 200


        @task
        def check_negative_scenario_005(self):
            # We will be accessing a show object
            show_data_1 = self.client.get(
                    '/api.php?__call=show.getHomePage&show_id=394604&season_number=1&app_version=9.4.0&device_type'
                    '=iPhone_XR&_format=json&ctx=iphoneapp&_marker=false&v=947&cc=in&network_type=WIFI&tz=asia/kolkata'
                    '&network_subtype=WIFI&network_operator=jio&is_jio_user=false&api_version=4&season_number=1&show_id'
                    '=394604')
            assert show_data_1.status_code == 404 or show_data_1.status_code == 500




